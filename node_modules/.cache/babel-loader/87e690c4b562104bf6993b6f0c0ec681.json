{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jani/hatify/src/component/Contact/Contact.js\";\nimport React from 'react'; // import { Field, reduxForm } from 'redux-form'\n\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport asyncValidate from './asyncValidate';\n\nconst validate = values => {\n  const errors = {};\n  const requiredFields = ['firstName', 'lastName', 'email', 'favoriteColor', 'notes'];\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required';\n    }\n  });\n\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nconst renderTextField = ({\n  label,\n  input,\n  meta: {\n    touched,\n    invalid,\n    error\n  },\n  ...custom\n}) => /*#__PURE__*/_jsxDEV(TextField, {\n  label: label,\n  placeholder: label,\n  error: touched && invalid,\n  helperText: touched && error,\n  ...input,\n  ...custom\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 3\n}, this);\n\nconst renderCheckbox = ({\n  input,\n  label\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n    control: /*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: input.value ? true : false,\n      onChange: input.onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this),\n    label: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 54,\n  columnNumber: 3\n}, this);\n\nconst radioButton = ({\n  input,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(FormControl, {\n  children: /*#__PURE__*/_jsxDEV(RadioGroup, { ...input,\n    ...rest,\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      value: \"female\",\n      control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 49\n      }, this),\n      label: \"Female\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      value: \"male\",\n      control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 47\n      }, this),\n      label: \"Male\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      value: \"other\",\n      control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 48\n      }, this),\n      label: \"Other\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 68,\n  columnNumber: 3\n}, this);\n\nconst renderFromHelper = ({\n  touched,\n  error\n}) => {\n  if (!(touched && error)) {\n    return;\n  } else {\n    return /*#__PURE__*/_jsxDEV(FormHelperText, {\n      children: touched && error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n};\n\nconst renderSelectField = ({\n  input,\n  label,\n  meta: {\n    touched,\n    error\n  },\n  children,\n  ...custom\n}) => /*#__PURE__*/_jsxDEV(FormControl, {\n  error: touched && error,\n  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    children: \"Age\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Select, {\n    native: true,\n    ...input,\n    ...custom,\n    inputProps: {\n      name: 'age',\n      id: 'age-native-simple'\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this), renderFromHelper({\n    touched,\n    error\n  })]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 92,\n  columnNumber: 3\n}, this);\n\nconst MaterialUiForm = props => {\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting,\n    classes\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"firstName\",\n        component: renderTextField,\n        label: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"lastName\",\n        component: renderTextField,\n        label: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"email\",\n        component: renderTextField,\n        label: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"sex\",\n        component: radioButton,\n        children: [/*#__PURE__*/_jsxDEV(Radio, {\n          value: \"male\",\n          label: \"male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Radio, {\n          value: \"female\",\n          label: \"female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        classes: classes,\n        name: \"favoriteColor\",\n        component: renderSelectField,\n        label: \"Favorite Color\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 'ff0000',\n          children: \"Red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: '00ff00',\n          children: \"Green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: '0000ff',\n          children: \"Blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"employed\",\n        component: renderCheckbox,\n        label: \"Employed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"notes\",\n        component: renderTextField,\n        label: \"Notes\",\n        multiline: true,\n        rowsMax: \"4\",\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: pristine || submitting,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        disabled: pristine || submitting,\n        onClick: reset,\n        children: \"Clear Values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MaterialUiForm;\nexport default reduxForm({\n  form: 'MaterialUiForm',\n  // a unique identifier for this form\n  validate,\n  asyncValidate\n})(MaterialUiForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"MaterialUiForm\");","map":{"version":3,"sources":["/Users/jani/hatify/src/component/Contact/Contact.js"],"names":["React","TextField","Checkbox","FormControlLabel","FormControl","Select","InputLabel","FormHelperText","Radio","RadioGroup","asyncValidate","validate","values","errors","requiredFields","forEach","field","email","test","renderTextField","label","input","meta","touched","invalid","error","custom","renderCheckbox","value","onChange","radioButton","rest","renderFromHelper","renderSelectField","children","name","id","MaterialUiForm","props","handleSubmit","pristine","reset","submitting","classes","reduxForm","form"],"mappings":"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","sourcesContent":["import React from 'react'\n// import { Field, reduxForm } from 'redux-form'\nimport TextField from '@material-ui/core/TextField'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport asyncValidate from './asyncValidate'\n\nconst validate = values => {\n  const errors = {}\n  const requiredFields = [\n    'firstName',\n    'lastName',\n    'email',\n    'favoriteColor',\n    'notes'\n  ]\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required'\n    }\n  })\n  if (\n    values.email &&\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n  ) {\n    errors.email = 'Invalid email address'\n  }\n  return errors\n}\n\nconst renderTextField = ({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <TextField\n    label={label}\n    placeholder={label}\n    error={touched && invalid}\n    helperText={touched && error}\n    {...input}\n    {...custom}\n  />\n)\n\nconst renderCheckbox = ({ input, label }) => (\n  <div>\n    <FormControlLabel\n      control={\n        <Checkbox\n          checked={input.value ? true : false}\n          onChange={input.onChange}\n        />\n      }\n      label={label}\n    />\n  </div>\n)\n\nconst radioButton = ({ input, ...rest }) => (\n  <FormControl>\n    <RadioGroup {...input} {...rest}>\n      <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n      <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n      <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n    </RadioGroup>\n  </FormControl>\n)\n\nconst renderFromHelper = ({ touched, error }) => {\n  if (!(touched && error)) {\n    return\n  } else {\n    return <FormHelperText>{touched && error}</FormHelperText>\n  }\n}\n\nconst renderSelectField = ({\n  input,\n  label,\n  meta: { touched, error },\n  children,\n  ...custom\n}) => (\n  <FormControl error={touched && error}>\n    <InputLabel htmlFor=\"age-native-simple\">Age</InputLabel>\n    <Select\n      native\n      {...input}\n      {...custom}\n      inputProps={{\n        name: 'age',\n        id: 'age-native-simple'\n      }}\n    >\n      {children}\n    </Select>\n    {renderFromHelper({ touched, error })}\n  </FormControl>\n)\n\nconst MaterialUiForm = props => {\n  const { handleSubmit, pristine, reset, submitting, classes } = props\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field\n          name=\"firstName\"\n          component={renderTextField}\n          label=\"First Name\"\n        />\n      </div>\n      <div>\n        <Field name=\"lastName\" component={renderTextField} label=\"Last Name\" />\n      </div>\n      <div>\n        <Field name=\"email\" component={renderTextField} label=\"Email\" />\n      </div>\n      <div>\n        <Field name=\"sex\" component={radioButton}>\n          <Radio value=\"male\" label=\"male\" />\n          <Radio value=\"female\" label=\"female\" />\n        </Field>\n      </div>\n      <div>\n        <Field\n          classes={classes}\n          name=\"favoriteColor\"\n          component={renderSelectField}\n          label=\"Favorite Color\"\n        >\n          <option value=\"\" />\n          <option value={'ff0000'}>Red</option>\n          <option value={'00ff00'}>Green</option>\n          <option value={'0000ff'}>Blue</option>\n        </Field>\n      </div>\n      <div>\n        <Field name=\"employed\" component={renderCheckbox} label=\"Employed\" />\n      </div>\n      <div />\n      <div>\n        <Field\n          name=\"notes\"\n          component={renderTextField}\n          label=\"Notes\"\n          multiline\n          rowsMax=\"4\"\n          margin=\"normal\"\n        />\n      </div>\n      <div>\n        <button type=\"submit\" disabled={pristine || submitting}>\n          Submit\n        </button>\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({\n  form: 'MaterialUiForm', // a unique identifier for this form\n  validate,\n  asyncValidate\n})(MaterialUiForm)\n"]},"metadata":{},"sourceType":"module"}